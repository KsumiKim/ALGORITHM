package algorithm;

public class RemovePalindromic {

	public static void main(String[] args) {
		String s = "baabb";
		int res = removePalindromeSub(s);
		
		System.out.println(res);
	}
	/*
	 * Given a string s consisting only of letters 'a' and 'b'. 
	 * In a single step you can remove one palindromic subsequence from s.
	 * Return the minimum number of steps to make the given string empty.
	 * A string is a subsequence of a given string, if it is generated by 
	 * deleting some characters of a given string without changing its order.
	 * A string is called palindrome if is one that reads the same backward as well as forward.
	 */
	
    public static int removePalindromeSub(String s) {
    	// if string is empty return 0
    	if (s.isEmpty())
    		return 0;
    	
    	// if string is already palindrome, return 1
    	if (s.equals(new StringBuilder(s).reverse().toString()))
    		return 1;
    	
    	// otherwise return 2
    	// Know the difference between subarray and subsequence 
    	return 2;
    }
}
